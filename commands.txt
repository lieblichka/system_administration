*** LINUX ADMINISTRATION 
Администрирование Linux

	### Базовые комманды linux
		
		# PWD						- вывод полного пути к текущей дирректории 
		# CD dirname				- переместиться в выбранной дирректории
		# TOUCH filename			- создаить пустой файл 
		# CAT filename				- вывести в поток вывода содержимое файла
		# MV oldname newname		- переименовать файл/папку, либо переместить 
		# CP currentpath newoath	- скопировать файл/папку
		# CLEAR						- очистить содержимое на экране 
		# LS						- вывести список файлов в текущей дирректории 
	
	### Комманды системного администратора 

		# HEAD  		
		
			@ cat random.txt | head -n 2	# вывести первые две строчки с начала файла 
			.............. | head -2	# работает аналогично  

		# TAIL 

			@ cat random.txt | tail -n 2	# вывести пеовые 2 строчки с хвоста файла  
			.............. | tail -2	# результат аналогичный 

		# LESS - Утилита для чтения файлов с множеством строк, с возможностью
		перемещения внутри файла вверх и вниз и поиском внутри файла 

			- GENERAL FORMAT 
			
				@ less name_of_file

			- PIPE FORMAT 
				
				@ cat name_of_file | less 

			- LESS COMMANDS AND FUNCTIONS 
			
				up		- num button 2 
				down	- num button 8 
				
				/(search_word without register)
		
		# MORE - работает почти также как LESS, только вывод осуществляется постранично
		листать вверх нельзя.    
			
				@ cat random.txt | more 

					READ FILE TO EOF			 	

		# WHOAMI - команда для проверки кто мы 
				
			@ whoami
				
				sysadm 

			


*** 3_LESSON
 
	### Потоки ввода/вывода данных  

		# Данной конструкцией происходит запись данных с клавиатуры в файл, 

			@> cat > file.txt 
			
				..... read keyboard input 
				end of file 

			@> cat file.txt 
		
				end of file 


		# Запись содержимого файла 1.txt в файл 2.txt
			
			- Операция записи/перезаписи

				@> cat 1.txt > 2.txt 	 

		# Запись новых данных в файл без удаления старых
			
			- Операция дозаписывания 

				@> cat 3.txt >> 2.txt 

	 	# Перенаправление вывода любой уилиты в файл 

			@> ls --help > helpfile  

	### GREP  

		- Ищет вхождение некого значения в строки файла и выбирает
		только те строки, где это есть. 
 
		# Искать слово it в файле 1.txt 
			
			@> grep it < 1.txt

		# Искать вхождение ipv4 в файле 
			
			@> grep ipv4 < /etc/sysctl.conf

		
	### Сокращенные логические операторы

		&& - оператор логического умножения
			
			# Выполнить второе действие если первое истинно, а конкретно
			если файл прочитан, вывести на экран "THE TEXT WAS READ"

				@> cat 1.txt && echo "THE TEXT WAS READ"
			
			# Прочитать если прочитали первый файл

				@> cat 1.txt && cat 4.txt 

		|| оператор логического сложения 

			# Выполнить второе действие в любом случае даже, если 
			не выполнилось первое действие 

				@> cd /root || echo "IT'S A BAD BAD IDEA"

	# HISTORY - выводит историю всех производимых действий

		@> history 

		- Вывести последние 10 команд

			@> history 10 
				
				ls
				...
		- Альтернативный способ 

			@> history > history.txt && less history.txt

		- Альтернативный способ 2 

			@> history | less  

		- Комбинирование вместе с GREP  
			
			@> history > history.txt && grep cat < history.txt
			
			- Супер-модификация
				
				@> history > history.txt && grep cat < history.txt | less

		
*** 4 LESSON - Работа с файлами и каталогами

		
	# FILE - утилита для определения типа файлов по MAGIC маске 

		@> file 1.txt

			1.txt: ASCII text 			

		@> file /bin/bash
			
			/bin/bash: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically
			linked, interpreter /lib64/ld-linux-x86-64.so.2,
			BuildID[sha1]=0b6b11360e339f231f17484da2c87d0d78554e31, for GNU/Linux 3.2.0,
			stripped

		- Переместимся в раздел /dev
		
			@> cd /dev
		
			@> file tty1 
			
				tty1: character special (4/1)
		
			@> file sda 
			
				sda: block special (8/0)


	# ФОРМАТЫ ПОДСТАНОВКИ

		@> cd /dev 
		
		- Подстановка при помощи *, начало имени статичное, а все после
		имени автоподстановкой, * - значит любые символы

		@> ls sd*

			sda sda1 sda2 sda5
		
		- Еще несколько методов постановки при помощи массива символов после статичного
		имени

		@> ls sd[abcdef] sda
			
			sda

		@> ls tty[1234]
	
			tty1 tty2 tty3 tty4
			

			... Примечание, конструкция ниже выполняет поиск именно поэлементо, каждый 
			символ внутри массива является отдельным, поэтому выводит только tty4  
				
				@> ls tty[44]
			
					tty4 

	### TOUCH 
 	- утилита для создания файлай 

		@> touch filename # создать файл

		# МОЖНО УСТАНОВИТЬ ДАТУ СОЗДАНИЯ ФАЙЛА КАСТОМНО 
			
			@> man touch | grep date | tail -n 4 | head -1 | cut -d " -f 3
				
				2004-02-29 16:21:42 . 53	# формат задания без разделителей,
											после точки устанвливаются секунды
			
			@> touch -t 202309172133.53 newfile.txt
			@> stat newfile.txt

				[ изменяет эти два поля, но не затрагивает поля : изменен/создан

				 Доступ:        2023-09-17 21:23:53.064105867 +0300
			 	 Модифицирован: 2023-09-17 21:23:53.056105867 +0300

				]

				[ данные поля остаются неизменными

				 Изменён:       2023-09-17 21:23:53.056105867 +0300
			 	 Создан:        2023-09-17 21:22:42.980102509 +0300

				]

			@> ls -l newfile.txt 
				
				-rw-r--r-- 1 sysadm sysadm 0 сен 17 21:33 newfile.txt


		# Копировать метку времени другого файла 
			
			@> touch -r parentfile newfile
				
				# Данная команда скопируют абсолютно все данные о времени в указанный
				файл из исходного 
				
		# Данные изменения и создания кастомно изменить вручную нельзя
		система задает их автоматичекски, но есть одна хитрость
				
				[
				 	Изменён:       2023-09-17 21:23:53.056105867 +0300
			 	 	Создан:        2023-09-17 21:22:42.980102509 +0300
				]
				
				- Изменить системное время 

					sudo date --set 10/04/2019	

				- Создаем и модифицируем файл
	
					touch date.txt
					touch -mat 201910041103 date.txt 
					
						- m 	# Дата модификации 
						- a		# Дата открытия 
						- t 	# Отметка времени

				- Синхронизиурем часы
					
					sudo timedatectl set-ntp true 

				- Результат 
					
					stat date.txt	

		


			
